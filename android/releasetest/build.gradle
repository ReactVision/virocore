apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    flavorDimensions "target_platform"
    namespace "com.viromedia.releasetest"
    compileSdkVersion 33
    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        applicationId "com.viromedia.releasetest"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testApplicationId "com.viromedia.releasetest"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        missingDimensionStrategy 'product', 'viro_core'
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        gvr_vr_enabled {
            dimension "target_platform"
            resValue "string", "app_name", "ReleasTest-gvr-vr"
            applicationIdSuffix ".gvr"
            buildConfigField "String", "VR_PLATFORM", "\"GVR\""
            buildConfigField "Integer", "VR_ENABLED", "1"
        }

        gvr_vr_disabled {
            dimension "target_platform"
            resValue "string", "app_name", "ReleasTest-gvr-360"
            applicationIdSuffix ".gvr"
            buildConfigField "String", "VR_PLATFORM", "\"GVR\""
            buildConfigField "Integer", "VR_ENABLED", "0"
        }

        ovr {
            dimension "target_platform"
            resValue "string", "app_name", "ReleaseTest-ovr"
            applicationIdSuffix ".ovr"
            buildConfigField "String", "VR_PLATFORM", "\"OVR\""
            buildConfigField "Integer", "VR_ENABLED", "1"
        }
        arcore {
            dimension "target_platform"
            resValue "string", "app_name", "ReleasTest-arcore"
            applicationIdSuffix ".arcore"
            buildConfigField "String", "VR_PLATFORM", "\"ARCore\""
            buildConfigField "Integer", "VR_ENABLED", "0"
        }
        scene {
            dimension "target_platform"
            resValue "string", "app_name", "ReleasTest-scene"
            applicationIdSuffix ".scene"
            buildConfigField "String", "VR_PLATFORM", "\"Scene\""
            buildConfigField "Integer", "VR_ENABLED", "0"
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            events "started", "skipped", "passed", "failed"
            showStandardStreams true
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation project(':virocore')
    implementation 'com.google.ar:core:1.41.0'
    implementation project(':libs:gvr')
    implementation "androidx.appcompat:appcompat:1.0.0"
    // testing dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.0"
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation "androidx.test:runner:1.4.0"

    androidTestImplementation "androidx.test.ext:junit:1.1.4"
    androidTestImplementation "androidx.test.ext:truth:1.4.0"
    androidTestImplementation('org.awaitility:awaitility:4.2.1') {
        transitive = false
    }
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.21"
}
